diff -ur srcold/racoon/evt.c src/racoon/evt.c
--- srcold/racoon/evt.c	2013-11-29 13:28:20.000000000 +0000
+++ src/racoon/evt.c	2013-11-29 13:28:32.000000000 +0000
@@ -297,7 +297,7 @@
 		return;
 
 	evtmsg_broadcast(&evt_listeners, e);
-	evt_push(&e->evt.ec_ph1src, &e->evt.ec_ph1dst, type, optdata);
+	evt_push((struct sockaddr *)&e->evt.ec_ph1src, (struct sockaddr *)&e->evt.ec_ph1dst, type, optdata);
 
 	racoon_free(e);
 }
@@ -320,7 +320,7 @@
 
 	evtmsg_broadcast(&ph1->evt_listeners, e);
 	evtmsg_broadcast(&evt_listeners, e);
-	evt_push(&e->evt.ec_ph1src, &e->evt.ec_ph1dst, type, optdata);
+	evt_push((struct sockaddr *)&e->evt.ec_ph1src, (struct sockaddr *)&e->evt.ec_ph1dst, type, optdata);
 
 	racoon_free(e);
 }
@@ -349,7 +349,7 @@
 	if (ph1)
 		evtmsg_broadcast(&ph1->evt_listeners, e);
 	evtmsg_broadcast(&evt_listeners, e);
-	evt_push(&e->evt.ec_ph1src, &e->evt.ec_ph1dst, type, optdata);
+	evt_push((struct sockaddr *)&e->evt.ec_ph1src, (struct sockaddr *)&e->evt.ec_ph1dst, type, optdata);
 
 	racoon_free(e);
 }
diff -ur srcold/racoon/grabmyaddr.c src/racoon/grabmyaddr.c
--- srcold/racoon/grabmyaddr.c	2013-11-29 13:28:21.000000000 +0000
+++ src/racoon/grabmyaddr.c	2013-11-29 13:28:32.000000000 +0000
@@ -741,12 +741,12 @@
 
 	switch (rtm->rtm_type) {
 	case RTM_NEWADDR:
-		parse_addresses(ifa + 1, msg + ifa->ifam_msglen,
+		parse_addresses((caddr_t)(ifa + 1), msg + ifa->ifam_msglen,
 				ifa->ifam_addrs, &addr);
 		myaddr_open_all_configured((struct sockaddr *) &addr);
 		break;
 	case RTM_DELADDR:
-		parse_addresses(ifa + 1, msg + ifa->ifam_msglen,
+		parse_addresses((caddr_t)(ifa + 1), msg + ifa->ifam_msglen,
 				ifa->ifam_addrs, &addr);
 		myaddr_close_all_open((struct sockaddr *) &addr);
 		break;
diff -ur srcold/racoon/ipsec_doi.c src/racoon/ipsec_doi.c
--- srcold/racoon/ipsec_doi.c	2013-11-29 13:28:21.000000000 +0000
+++ src/racoon/ipsec_doi.c	2013-11-29 13:28:32.000000000 +0000
@@ -1183,7 +1183,7 @@
 			"failed to get buffer.\n");
 		goto bad;
 	}
-	memset(pair, 0, sizeof(pair));
+	memset(pair, 0, MAXPROPPAIRLEN * sizeof(*pair));
 
 	bp = (caddr_t)(sab + 1);
 	tlen = sa->l - sizeof(*sab);
diff -ur srcold/racoon/isakmp.c src/racoon/isakmp.c
--- srcold/racoon/isakmp.c	2013-11-29 13:28:20.000000000 +0000
+++ src/racoon/isakmp.c	2013-11-29 13:31:18.000000000 +0000
@@ -1128,10 +1128,7 @@
 
 /* new negotiation of phase 1 for responder */
 static int
-isakmp_ph1begin_r(msg, remote, local, etype)
-	vchar_t *msg;
-	struct sockaddr *remote, *local;
-	u_int8_t etype;
+isakmp_ph1begin_r(vchar_t *msg, struct sockaddr *remote, struct sockaddr *local, u_int8_t etype)
 {
 	struct isakmp *isakmp = (struct isakmp *)msg->v;
 	struct ph1handle *iph1;
@@ -1621,6 +1618,13 @@
 		plog(LLV_WARNING, LOCATION, NULL,
 		     "failed to put socket in non-blocking mode\n");
 
+	if (setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(yes)) < 0)
+		plog(LLV_WARNING, LOCATION, NULL,
+		     "failed to put socket in reuseaddr mode\n");
+        if (setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, &yes, sizeof(yes)) < 0)
+		plog(LLV_WARNING, LOCATION, NULL,
+		     "failed to put socket in reuseport mode\n");
+
 	/* receive my interface address on inbound packets. */
 	switch (addr->sa_family) {
 	case AF_INET:
diff -ur srcold/racoon/racoonctl.c src/racoon/racoonctl.c
--- srcold/racoon/racoonctl.c	2013-11-29 13:28:20.000000000 +0000
+++ src/racoon/racoonctl.c	2013-11-29 13:28:32.000000000 +0000
@@ -1504,7 +1504,7 @@
 		else if (evt_quit_event == ec->ec_type) {
 			switch (ec->ec_type) {
 			case EVT_PHASE1_MODE_CFG:
-				print_cfg(ec, len);
+				print_cfg((caddr_t)ec, len);
 				break;
 			default:
 				print_evt(ec);
