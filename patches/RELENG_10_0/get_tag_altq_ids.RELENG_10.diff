diff --git a/sys/net/pfvar.h b/sys/net/pfvar.h
index a5356d5..e2a427d 100644
--- a/sys/net/pfvar.h
+++ b/sys/net/pfvar.h
@@ -1594,6 +1594,8 @@ struct pfioc_trans {
 #ifdef _KERNEL
 #define PFR_FLAG_USERIOCTL	0x10000000
 #endif
+#define DIOCGETNAMEDALTQ	_IOWR('D', 94, struct pfioc_ruleset)
+#define DIOCGETNAMEDTAG		_IOR('D', 95, u_int32_t)
 
 struct pfioc_table {
 	struct pfr_table	 pfrio_table;
diff --git a/sys/netpfil/pf/pf_ioctl.c b/sys/netpfil/pf/pf_ioctl.c
index 4516563..d851e41 100644
--- a/sys/netpfil/pf/pf_ioctl.c
+++ b/sys/netpfil/pf/pf_ioctl.c
@@ -981,6 +981,8 @@ pfioctl(struct cdev *dev, u_long cmd, caddr_t addr, int flags, struct thread *td
 		case DIOCCLRRULECTRS:
 		case DIOCGETLIMIT:
 		case DIOCGETALTQS:
+		case DIOCGETNAMEDALTQ:
+		case DIOCGETNAMEDTAG:
 		case DIOCGETALTQ:
 		case DIOCGETQSTATS:
 		case DIOCGETRULESETS:
@@ -1027,6 +1029,8 @@ pfioctl(struct cdev *dev, u_long cmd, caddr_t addr, int flags, struct thread *td
 		case DIOCGETTIMEOUT:
 		case DIOCGETLIMIT:
 		case DIOCGETALTQS:
+		case DIOCGETNAMEDALTQ:
+		case DIOCGETNAMEDTAG:
 		case DIOCGETALTQ:
 		case DIOCGETQSTATS:
 		case DIOCGETRULESETS:
@@ -2042,6 +2046,16 @@ DIOCGETSTATES_full:
 		break;
 	}
 
+	case DIOCGETNAMEDALTQ: {
+		struct pfioc_ruleset	*pa = (struct pfioc_ruleset *)addr;
+
+		if (pa->name[0]) {
+                        pa->nr = pf_qname2qid(pa->name);
+                        pf_qid_unref(pa->nr);
+                }
+		break;
+	}
+	
 	case DIOCGETALTQS: {
 		struct pfioc_altq	*pa = (struct pfioc_altq *)addr;
 		struct pf_altq		*altq;
@@ -2127,6 +2141,16 @@ DIOCGETSTATES_full:
 	}
 #endif /* ALTQ */
 
+	case DIOCGETNAMEDTAG: {
+                /* Little abuse. */
+                struct pfioc_ruleset    *pa = (struct pfioc_ruleset *)addr;
+
+                if (pa->name[0])
+                        pa->nr = pf_tagname2tag(pa->name);
+
+                break;
+        }
+
 	case DIOCBEGINADDRS: {
 		struct pfioc_pooladdr	*pp = (struct pfioc_pooladdr *)addr;
 
